import re
import sys
import argparse
import os


attacker_action_regex = "\(:action attack_[^@]*?\)\)\n\)"
attacker_action_name_regex = "attack_[^\n]*"


def modify_problem_file(problem_file_name):
    print(problem_file_name)

    problem_file = open(problem_file_name, "r")
    content = problem_file.read()
    problem_file.close()

    attacker_actions = re.findall(attacker_action_regex, content)
    print(attacker_actions[0])
    for attacker_action in attacker_actions:
        action_name = re.search(attacker_action_name_regex, attacker_action)
        whitespace = action_name.find(" ")
        if whitespace == -1:
            whitespace = action_name.size
        everything_before_whitespace = action_name.substr(0, whitespace);
        underscore = everything_before_whitespace.find_last_of("_");
        prob_string = everything_before_whitespace.substr(underscore + 1);

    #objects = re.search(objects_regex, content).group()
    #print(objects)




p = argparse.ArgumentParser(description="")
p.add_argument("--dir", type=str, help="The director in which the pentest problem files should be modified", default=None)
args = p.parse_args(sys.argv[1:])


dir = str(args.dir)
files_in_dir = os.listdir(dir)
print(files_in_dir)


print(dir)

for file in files_in_dir:
    if file.find("pddl") == -1 or file.find("domain") == -1:
        print(file + " skipped!")
    else:
        modify_problem_file(os.path.join(dir, file))
